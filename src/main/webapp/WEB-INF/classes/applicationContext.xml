<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd"
>


    <context:component-scan base-package="com.share.charge"/>

    <bean id="helloWord" class="com.share.charge.test.HelloWorld">
        <property name="name" value="徐代龙"></property>
        <property name="age" value="25"></property>
    </bean>


<!--    spring 整合 mybatis-->
    <!--
          用途1：Spring的xml配置文件中，可以通过${属性名}使用properties文件配置的值
          用途2：可以使用@Value("${属性名}")注解读取properties文件配置的值，再给字段赋值
                 方法1：注解在字段上，给字段赋值
                 方法2：注解在字段的setter方法中赋值
    -->
    <context:property-placeholder location="classpath:mybatis_db.properties"/>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis_config.xml"/>
<!--
        如果xml和mapper接口在同名包内，那么mapperLocations属性可以省略，
        只要配置好下面的bean：MapperScannerConfigurer
-->
        <property name="mapperLocations" >
            <array>
                <value>classpath:com/share/charge/mybatis/generator/mapper/*.xml</value>
            </array>
        </property>
        <!-- 传入PageHelper的插件 -->
        <property name="plugins">
            <array>
                <!-- 传入插件的对象 -->
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            offsetAsPageNum=true
                            rowBoundsWithCount=true
                            pageSizeZero=true
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>

<!--    这部分和com.share.charge.config.MyBatisConfig是等效的，只需要选择其中一种方式来扫描mapper
        不然就会出现warn提示已经存在bean-->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="basePackage" value="com.share.charge.mybatis.generator.mapper"/>-->
<!--    </bean>-->

    <!--事务管理 1.配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--2.开启事务注解-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

<!--    <aop:aspectj-autoproxy/>-->



</beans>